Index.html :

<!doctype html>
<html lang=”en”>
<head>
<meta charset=”utf-8”>
<title>Prac5</title>
<base href=”/”>
<meta name=”viewport” content=”width=device-width, initial-scale=1”>
<link rel=”icon” type=”image/x-icon” href=”favicon.ico”>
</head>
<body>
<app-root></app-root>
</body>
</html>
Main.ts :
import { platformBrowserDynamic } from ‘@angular/platform-browser-dynamic’; import { AppModule } from ‘./app/app.module’; platformBrowserDynamic().bootstrapModule(AppModule)
.catch(err => console.error(err));

Appcomponent.ts :

import { Component } from ‘@angular/core’; @Component({
selector: ‘app-root’,
templateUrl: ‘./app.component.html’, styleUrls: [‘./app.component.css’]
})
export class AppComponent {
getRandomNumber = () => {
const random = Math.random() * 100;
// have a 30% chance of throwing an error if (random > 70) {
throw new Error(‘Something went wrong!’);
}
return random;
}
}

AppModules.ts :

import { ErrorHandler, NgModule } from ‘@angular/core’; import { BrowserModule } from ‘@angular/platform-browser’; import { HttpClientModule } from ‘@angular/common/http’; import { AppComponent } from ‘./app.component’;
import { GlobalErrorHandler } from ‘./errorHandler’; @NgModule({
declarations: [ AppComponent
],
imports: [ BrowserModule, HttpClientModule
],
providers: [
 
{ provide: ErrorHandler, useClass: GlobalErrorHandler }
],
bootstrap: [AppComponent]
})
export class AppModule { }

Error Handling.ts
import { ErrorHandler, Injectable } from ‘@angular/core’;
@Injectable()
export class GlobalErrorHandler implements ErrorHandler {
 
handleError(error: any) {
alert(‘An error occurred: ‘ + error.message); console.error(error);
}
}
